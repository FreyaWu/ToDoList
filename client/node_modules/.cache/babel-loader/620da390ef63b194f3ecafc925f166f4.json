{"ast":null,"code":"var _jsxFileName = \"/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport { ListGroup } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCard(list) {\n  _s();\n\n  const [isShown, setIsShown] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n  const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n  const fetchTasks = async () => {\n    const {\n      data: lists\n    } = await axios.get('/api/todolist/');\n    setTasks(lists.tasks);\n  };\n\n  const handleDelete = async taskId => {\n    await axios.delete(`/api/todolist/${taskId}`);\n    fetchTasks();\n  };\n\n  useEffect(() => {\n    console.log(list);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-2 align-text-center\",\n    children: list.list.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskBox, {\n      className: \"m-1\",\n      onClick: () => handleDelete(task._id),\n      onMouseEnter: () => setIsShown(true),\n      onMouseLeave: () => setIsShown(false),\n      children: [isShown && /*#__PURE__*/_jsxDEV(TaskOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), task.time, \" \\u2014\\u2014 \", task.task]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListCard, \"2vpuiUQyilLrcsGFD/fMM8KBjvQ=\");\n\n_c = ListCard;\nexport default ListCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCard\");","map":{"version":3,"sources":["/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListCard.js"],"names":["React","useEffect","useState","axios","Container","ListGroup","Button","styled","TaskForm","ListCard","list","isShown","setIsShown","tasks","setTasks","TaskOverlay","div","TaskBox","fetchTasks","data","lists","get","handleDelete","taskId","delete","console","log","map","task","index","_id","time"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMa,WAAW,GAAGR,MAAM,CAACS,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAPI;AASA,QAAMC,OAAO,GAAGV,MAAM,CAACS,GAAI;AAC/B,kBAAkBD,WAAY;AAC9B;AACA;AACA;AACA,KALI;;AAOA,QAAMG,UAAU,GAAG,YAAY;AAC3B,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAkB,MAAMjB,KAAK,CAACkB,GAAN,CAAU,gBAAV,CAA9B;AACAP,IAAAA,QAAQ,CAACM,KAAK,CAACP,KAAP,CAAR;AACH,GAHD;;AAKA,QAAMS,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACnC,UAAMpB,KAAK,CAACqB,MAAN,CAAc,iBAAgBD,MAAO,EAArC,CAAN;AACAL,IAAAA,UAAU;AACb,GAHD;;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cAUKA,IAAI,CAACA,IAAL,CAAUG,KAAV,CAAgBc,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,kBACjB,QAAC,OAAD;AAAqB,MAAA,SAAS,EAAC,KAA/B;AAAqC,MAAA,OAAO,EAAE,MAAMP,YAAY,CAACM,IAAI,CAACE,GAAN,CAAhE;AACI,MAAA,YAAY,EAAE,MAAMlB,UAAU,CAAC,IAAD,CADlC;AAEI,MAAA,YAAY,EAAE,MAAMA,UAAU,CAAC,KAAD,CAFlC;AAAA,iBAGKD,OAAO,iBACJ,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAJR,EAMKiB,IAAI,CAACG,IANV,oBAMoBH,IAAI,CAACA,IANzB;AAAA,OAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,YADH;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA1DQpB,Q;;KAAAA,Q;AA4DT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport { ListGroup } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport TaskForm from './TaskForm';\n\nfunction ListCard(list) {\n    const [isShown, setIsShown] = useState(false);\n    const [tasks, setTasks] = useState([]);\n\n    const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n\n    const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n    const fetchTasks = async () => {\n        const { data: lists } = await axios.get('/api/todolist/');\n        setTasks(lists.tasks);\n    };\n\n    const handleDelete = async (taskId) => {\n        await axios.delete(`/api/todolist/${taskId}`);\n        fetchTasks();\n    }\n\n    useEffect(() => {\n        console.log(list);\n    }, []);\n\n    return (\n        <div className=\"pt-2 align-text-center\">\n            {/* <form>\n                    {tasks.map((task, index) =>\n                        <div>\n                            <input type=\"checkbox\" id=\"task\" name=\"task\" value=\"task\" className=\"task\" key={index}></input>\n                            <label for=\"task\" className=\"m-1 task\" key={index}>{task.time} —— {task.task}</label>\n                        </div>\n                    )}\n                    <Button variant=\"warning\" type=\"submit\" className=\"m-2\" onDelete={deleteTasks}>Completed!</Button>\n                </form> */}\n            {list.list.tasks.map((task, index) =>\n                <TaskBox key={index} className=\"m-1\" onClick={() => handleDelete(task._id)}\n                    onMouseEnter={() => setIsShown(true)}\n                    onMouseLeave={() => setIsShown(false)}>\n                    {isShown && (\n                        <TaskOverlay />\n                    )}\n                    {task.time} —— {task.task}\n                </TaskBox>\n            )}\n        </div>\n\n    )\n}\n\nexport default ListCard;"]},"metadata":{},"sourceType":"module"}