{"ast":null,"code":"var _jsxFileName = \"/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport ListForm from './ListForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCard({\n  list,\n  updateLists\n}) {\n  _s();\n\n  const [isShown, setIsShown] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n  const ListBox = styled.div`\n        &:hover ${ListOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n  const fetchTasks = async () => {\n    const {\n      data: lists\n    } = await axios.get('/api/todolist/');\n    setTasks(lists.tasks);\n  };\n\n  useEffect(() => {\n    console.log(list); // list.updateLists.fetchTasks();\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-2 align-text-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/list/${list._id}`\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          onMouseEnter: () => setIsShown(true),\n          onMouseLeave: () => setIsShown(false),\n          children: [isShown && /*#__PURE__*/_jsxDEV(TaskOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [list.author, \"'s \", list.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [list.date, list.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskBox, {\n              className: \"m-1\",\n              onMouseEnter: () => setIsShown(true),\n              onMouseLeave: () => setIsShown(false),\n              children: task\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, list._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this) // \n  //     {list.list.author}'s {list.list.title} - \n  //     {list.list.tasks.map((task, index) =>\n  //         <TaskBox key={index} className=\"m-1\">\n  //             {isShown && (\n  //                 <TaskOverlay />\n  //             )}\n  //             {task}\n  //         </TaskBox>\n  //     )\n  //     }\n  //     <Button className=\"mb-3\" variant=\"danger\" onClick={() => handleDelete(list.list._id)}> Delete</ Button>\n  // </div>\n  ;\n}\n\n_s(ListCard, \"2vpuiUQyilLrcsGFD/fMM8KBjvQ=\");\n\n_c = ListCard;\nexport default ListCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCard\");","map":{"version":3,"sources":["/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListCard.js"],"names":["React","useEffect","useState","axios","Container","Card","Button","Link","styled","ListForm","ListCard","list","updateLists","isShown","setIsShown","tasks","setTasks","TaskOverlay","div","ListBox","ListOverlay","fetchTasks","data","lists","get","console","log","width","pathname","_id","author","title","date","map","task","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAAyC;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMe,WAAW,GAAGT,MAAM,CAACU,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAPI;AASA,QAAMC,OAAO,GAAGX,MAAM,CAACU,GAAI;AAC/B,kBAAkBE,WAAY;AAC9B;AACA;AACA;AACA,KALI;;AAOA,QAAMC,UAAU,GAAG,YAAY;AAC3B,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAkB,MAAMpB,KAAK,CAACqB,GAAN,CAAU,gBAAV,CAA9B;AACAR,IAAAA,QAAQ,CAACO,KAAK,CAACR,KAAP,CAAR;AACH,GAHD;;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ,EADY,CAEZ;AACH,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,6BACI,QAAC,IAAD;AAEI,QAAA,EAAE,EAAE;AACAC,UAAAA,QAAQ,EAAG,SAAQjB,IAAI,CAACkB,GAAI;AAD5B,SAFR;AAAA,+BAMI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,YAAY,EAAE,MAAMf,UAAU,CAAC,IAAD,CAAzC;AACI,UAAA,YAAY,EAAE,MAAMA,UAAU,CAAC,KAAD,CADlC;AAAA,qBAEKD,OAAO,iBACJ,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAHR,eAKI,QAAC,IAAD,CAAM,KAAN;AAAA,uBAAaF,IAAI,CAACmB,MAAlB,SAA6BnB,IAAI,CAACoB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAA,uBACKpB,IAAI,CAACqB,IADV,EAEKrB,IAAI,CAACI,KAAL,CAAWkB,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACZ,QAAC,OAAD;AAAqB,cAAA,SAAS,EAAC,KAA/B;AACI,cAAA,YAAY,EAAE,MAAMrB,UAAU,CAAC,IAAD,CADlC;AAEI,cAAA,YAAY,EAAE,MAAMA,UAAU,CAAC,KAAD,CAFlC;AAAA,wBAKKoB;AALL,eAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,oBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,SACSxB,IAAI,CAACkB,GADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CAgCI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CJ;AA+CH;;GA7EQnB,Q;;KAAAA,Q;AA+ET,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components';\nimport ListForm from './ListForm';\n\nfunction ListCard({ list, updateLists }) {\n    const [isShown, setIsShown] = useState(false);\n    const [tasks, setTasks] = useState([]);\n\n    const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n\n    const ListBox = styled.div`\n        &:hover ${ListOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n    const fetchTasks = async () => {\n        const { data: lists } = await axios.get('/api/todolist/');\n        setTasks(lists.tasks);\n    };\n\n    useEffect(() => {\n        console.log(list);\n        // list.updateLists.fetchTasks();\n    }, [list]);\n\n    return (\n        <div className=\"pt-2 align-text-center\">\n            <Card style={{ width: '18rem' }}>\n                <Link\n                    key={list._id}\n                    to={{\n                        pathname: `/list/${list._id}`\n                    }}\n                >\n                    <Card.Body onMouseEnter={() => setIsShown(true)}\n                        onMouseLeave={() => setIsShown(false)}>\n                        {isShown && (\n                            <TaskOverlay />\n                        )}\n                        <Card.Title>{list.author}'s {list.title}</Card.Title>\n                        <Card.Text>\n                            {list.date}\n                            {list.tasks.map((task, index) =>\n                                <TaskBox key={index} className=\"m-1\"\n                                    onMouseEnter={() => setIsShown(true)}\n                                    onMouseLeave={() => setIsShown(false)}\n                                >\n\n                                    {task}\n                                </TaskBox>\n                            )}\n                        </Card.Text>\n                    </Card.Body>\n                </Link>\n            </Card>\n        </div>\n\n        // \n        //     {list.list.author}'s {list.list.title} - \n        //     {list.list.tasks.map((task, index) =>\n        //         <TaskBox key={index} className=\"m-1\">\n        //             {isShown && (\n        //                 <TaskOverlay />\n        //             )}\n        //             {task}\n        //         </TaskBox>\n        //     )\n        //     }\n        //     <Button className=\"mb-3\" variant=\"danger\" onClick={() => handleDelete(list.list._id)}> Delete</ Button>\n        // </div>\n\n    )\n}\n\nexport default ListCard;"]},"metadata":{},"sourceType":"module"}