{"ast":null,"code":"var _jsxFileName = \"/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListEdit(props) {\n  _s();\n\n  const listId = props.match.params.listId;\n  const [tasks, setTasks] = useState([]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(e.target);\n    const newTask = {\n      title: e.target.title.value,\n      author: e.target.author.value,\n      date: e.target.date.value,\n      tasks: [e.target.task.value],\n      count: tasks.length\n    };\n    console.log(newTask);\n    await axios.post('/api/todolist/', newTask);\n    props.updateLists();\n  };\n\n  const handleAddTasks = async e => {\n    e.preventDefault();\n    console.log(e);\n    const newTask = e.target.task.value;\n    setTasks(...tasks, newTask);\n    console.log(tasks);\n  };\n\n  const handleUpdate = async listId => {\n    await axios.delete(`/api/todolist/${listId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Old version: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"mt-3\": true,\n      \"justify-content-center\": true,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"List title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Title\",\n            name: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            name: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Date\",\n            name: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Task:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Task\",\n            name: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mt-3\",\n          variant: \"warning\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListEdit, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c = ListEdit;\nexport default ListEdit; // return (\n//     <div className=\"pt-2 align-text-center\">\n//         {/* <form>\n//                 {tasks.map((task, index) =>\n//                     <div>\n//                         <input type=\"checkbox\" id=\"task\" name=\"task\" value=\"task\" className=\"task\" key={index}></input>\n//                         <label for=\"task\" className=\"m-1 task\" key={index}>{task.time} —— {task.task}</label>\n//                     </div>\n//                 )}\n//                 <Button variant=\"warning\" type=\"submit\" className=\"m-2\" onDelete={deleteTasks}>Completed!</Button>\n//             </form> */}\n//         {list.list.author}'s {list.list.title} - {list.list.date}\n//         {list.list.tasks.map((task, index) =>\n//             <TaskBox key={index} className=\"m-1\" onClick={() => handleDelete(task._id)}\n//                 onMouseEnter={() => setIsShown(true)}\n//                 onMouseLeave={() => setIsShown(false)}>\n//                 {isShown && (\n//                     <TaskOverlay />\n//                 )}\n//                 {task}\n//             </TaskBox>\n//         )}\n//         <Button className=\"mb-3\" variant=\"danger\">Delete</Button>\n//     </div>\n// )\n\nvar _c;\n\n$RefreshReg$(_c, \"ListEdit\");","map":{"version":3,"sources":["/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListEdit.js"],"names":["React","useEffect","useState","axios","Form","Button","ListEdit","props","listId","match","params","tasks","setTasks","handleSubmit","e","preventDefault","console","log","target","newTask","title","value","author","date","task","count","length","post","updateLists","handleAddTasks","handleUpdate","delete"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\n\nfunction ListEdit(props) {\n    const listId = props.match.params.listId;\n    const [tasks, setTasks] = useState([]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(e.target);\n        const newTask = { title: e.target.title.value, author: e.target.author.value, date: e.target.date.value, tasks: [e.target.task.value], count: tasks.length };\n        console.log(newTask);\n        await axios.post('/api/todolist/', newTask);\n        props.updateLists();\n    }\n\n    const handleAddTasks = async (e) => {\n        e.preventDefault();\n        console.log(e);\n        const newTask = e.target.task.value;\n        setTasks(...tasks, newTask);\n        console.log(tasks);\n    }\n\n    const handleUpdate = async (listId) => {\n        await axios.delete(`/api/todolist/${listId}`);\n    }\n\n    return (\n        <div>\n            <div>\n                <h2>Old version: </h2>\n            </div>\n            <div mt-3 justify-content-center>\n                <h2>Update</h2>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"title\">\n                        <Form.Label>List title:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Title\" name=\"title\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Name:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Name\" name=\"author\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Date:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Date\" name=\"date\" />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Task:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Task\" name=\"task\" />\n                        {/* <Button className=\"mt-3\" variant=\"secondary\" type=\"submit\">+</Button> */}\n                    </Form.Group>\n\n                    <Button className=\"mt-3\" variant=\"warning\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n\n            </div>\n\n\n\n\n        </div>\n    )\n\n}\n\nexport default ListEdit;\n\n\n// return (\n//     <div className=\"pt-2 align-text-center\">\n//         {/* <form>\n//                 {tasks.map((task, index) =>\n//                     <div>\n//                         <input type=\"checkbox\" id=\"task\" name=\"task\" value=\"task\" className=\"task\" key={index}></input>\n//                         <label for=\"task\" className=\"m-1 task\" key={index}>{task.time} —— {task.task}</label>\n//                     </div>\n//                 )}\n//                 <Button variant=\"warning\" type=\"submit\" className=\"m-2\" onDelete={deleteTasks}>Completed!</Button>\n//             </form> */}\n//         {list.list.author}'s {list.list.title} - {list.list.date}\n//         {list.list.tasks.map((task, index) =>\n//             <TaskBox key={index} className=\"m-1\" onClick={() => handleDelete(task._id)}\n//                 onMouseEnter={() => setIsShown(true)}\n//                 onMouseLeave={() => setIsShown(false)}>\n//                 {isShown && (\n//                     <TaskOverlay />\n//                 )}\n//                 {task}\n//             </TaskBox>\n//         )}\n//         <Button className=\"mb-3\" variant=\"danger\">Delete</Button>\n//     </div>\n\n// )"]},"metadata":{},"sourceType":"module"}