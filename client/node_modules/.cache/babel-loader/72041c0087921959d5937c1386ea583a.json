{"ast":null,"code":"var _jsxFileName = \"/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { Container, Button } from 'react-bootstrap';\nimport TodolistPage from './TodolistPage';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListShow(props) {\n  _s();\n\n  const listId = props.match.params.listId;\n  const [list, setList] = useState();\n  const [isShown, setIsShown] = useState(false);\n  const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n  const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n  const fetchList = async () => {\n    const {\n      data: list\n    } = await axios.get(`/api/todolist/${listId}`);\n    setList(list);\n    console.log(list);\n  };\n\n  const handleDelete = async listId => {\n    await axios.delete(`/api/todolist/${listId}`);\n\n    /*#__PURE__*/\n    _jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  };\n\n  useEffect(() => {\n    fetchList();\n    console.log(list);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), list && list.author && list.title && list.date && list.tasks && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [list.author, \"'s \", list.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), list.date, list.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskBox, {\n          className: \"m-1\",\n          children: [isShown && /*#__PURE__*/_jsxDEV(TaskOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }, this), task]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-3\",\n          variant: \"danger\",\n          onClick: () => handleDelete(listId),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/edit/${listId}`\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"m-3\",\n            variant: \"secondary\",\n            children: \" Edit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, listId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this) // <div></div>\n  ;\n}\n\n_s(ListShow, \"8fjXa/Ef6oim5hXa7zSn/4CuS9g=\");\n\n_c = ListShow;\nexport default ListShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListShow\");","map":{"version":3,"sources":["/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListShow.js"],"names":["React","useEffect","useState","axios","styled","Redirect","BrowserRouter","Switch","Route","Link","Container","Button","TodolistPage","Header","ListShow","props","listId","match","params","list","setList","isShown","setIsShown","TaskOverlay","div","TaskBox","fetchList","data","get","console","log","handleDelete","delete","pathname","author","title","date","tasks","map","task","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { Container, Button } from 'react-bootstrap';\nimport TodolistPage from './TodolistPage';\nimport Header from './Header';\n\nfunction ListShow(props) {\n    const listId = props.match.params.listId;\n    const [list, setList] = useState();\n    const [isShown, setIsShown] = useState(false);\n\n    const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n\n    const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n    const fetchList = async () => {\n        const { data: list } = await axios.get(`/api/todolist/${listId}`);\n        setList(list);\n        console.log(list);\n    }\n\n    const handleDelete = async (listId) => {\n        await axios.delete(`/api/todolist/${listId}`);\n        <Redirect to={{ pathname: \"/\" }} />\n    }\n\n    useEffect(() => {\n        fetchList();\n        console.log(list);\n    }, [])\n\n    return (\n\n        <Container fluid>\n            <Header />\n            {\n                list && list.author && list.title && list.date && list.tasks &&\n                <>\n                    <div className=\"text-center mt-5\">\n                        <div>\n                            {list.author}'s {list.title}\n                        </div>\n\n                        {list.date}\n                        {list.tasks.map((task, index) =>\n                            <TaskBox key={index} className=\"m-1\">\n                                {isShown && (\n                                    <TaskOverlay />\n                                )}\n                                {task}\n                            </TaskBox>\n                        )}\n                        <Button className=\"m-3\" variant=\"danger\" onClick={() => handleDelete(listId)}> Delete </ Button>\n\n                        <Link key={listId}\n                            to={{\n                                pathname: `/edit/${listId}`\n                            }}\n                        >\n                            <Button className=\"m-3\" variant=\"secondary\" > Edit </ Button>\n                        </Link>\n                    </div>\n                </>\n            }\n        </Container>\n\n        // <div></div>\n    )\n}\n\nexport default ListShow;"]},"metadata":{},"sourceType":"module"}