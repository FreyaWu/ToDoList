{"ast":null,"code":"var _jsxFileName = \"/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListShow(props) {\n  _s();\n\n  const listId = props.match.params.listId;\n  const [list, setList] = useState({});\n  const [isShown, setIsShown] = useState(false);\n  const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n  const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n  const fetchList = async () => {\n    const {\n      data: list\n    } = await axios.get(`/api/todolist/${listId}`);\n    setList(list);\n    console.log(list);\n  };\n\n  useEffect(() => {\n    fetchList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [list.date, list.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskBox, {\n      className: \"m-1\",\n      children: [isShown && /*#__PURE__*/_jsxDEV(TaskOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), task]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mb-3\",\n      variant: \"danger\",\n      children: \" Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListShow, \"/yxAiY+VkMPaEKOKDm9m2o2VMtY=\");\n\n_c = ListShow;\nexport default ListShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListShow\");","map":{"version":3,"sources":["/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListShow.js"],"names":["React","useEffect","useState","axios","Button","ListShow","props","listId","match","params","list","setList","isShown","setIsShown","TaskOverlay","styled","div","TaskBox","fetchList","data","get","console","log","date","tasks","map","task","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,MAAlC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMY,WAAW,GAAGC,MAAM,CAACC,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAPI;AAQA,QAAMC,OAAO,GAAGF,MAAM,CAACC,GAAI;AAC/B,kBAAkBF,WAAY;AAC9B;AACA;AACA;AACA,KALI;;AAOA,QAAMI,SAAS,GAAG,YAAY;AAC1B,UAAM;AAAEC,MAAAA,IAAI,EAAET;AAAR,QAAiB,MAAMP,KAAK,CAACiB,GAAN,CAAW,iBAAgBb,MAAO,EAAlC,CAA7B;AACAI,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACH,GAJD;;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,eACKR,IAAI,CAACa,IADV,EAEKb,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACZ,QAAC,OAAD;AAAqB,MAAA,SAAS,EAAC,KAA/B;AAAA,iBACKf,OAAO,iBACJ,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFR,EAIKc,IAJL;AAAA,OAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,YADH,CAFL,eAUI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA7CQtB,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\n\nfunction ListShow(props) {\n    const listId = props.match.params.listId;\n    const [list, setList] = useState({});\n    const [isShown, setIsShown] = useState(false);\n\n    const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n    const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n    const fetchList = async () => {\n        const { data: list } = await axios.get(`/api/todolist/${listId}`);\n        setList(list);\n        console.log(list);\n    }\n\n    useEffect(() => {\n        fetchList();\n    }, [])\n\n    return (\n        <div>\n            {list.date}\n            {list.tasks.map((task, index) =>\n                <TaskBox key={index} className=\"m-1\">\n                    {isShown && (\n                        <TaskOverlay />\n                    )}\n                    {task}\n                </TaskBox>\n            )}\n            <Button className=\"mb-3\" variant=\"danger\"> Delete</ Button>\n\n        </div>\n    )\n}\n\nexport default ListShow;"]},"metadata":{},"sourceType":"module"}