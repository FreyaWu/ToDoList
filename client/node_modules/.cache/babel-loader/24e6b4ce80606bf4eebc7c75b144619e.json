{"ast":null,"code":"var _jsxFileName = \"/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport TodolistPage from './TodolistPage';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListShow(props) {\n  _s();\n\n  const listId = props.match.params.listId;\n  const [list, setList] = useState();\n  const [isShown, setIsShown] = useState(false);\n  const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n  const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n  const fetchList = async () => {\n    const {\n      data: list\n    } = await axios.get(`/api/todolist/${listId}`);\n    setList(list);\n    console.log(list);\n  };\n\n  const handleDelete = async listId => {\n    await axios.delete(`/api/todolist/${listId}`);\n\n    /*#__PURE__*/\n    _jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  };\n\n  const handleUpdate = async listId => {\n    await axios.delete(`/api/todolist/${listId}`);\n\n    /*#__PURE__*/\n    _jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  };\n\n  useEffect(() => {\n    fetchList();\n    console.log(list);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list && list.author && list.title && list.date && list.tasks && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [list.author, \"'s \", list.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), list.date, list.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskBox, {\n        className: \"m-1\",\n        children: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-3\",\n        variant: \"danger\",\n        onClick: () => handleDelete(listId),\n        children: \" Delete \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/list/${list._id}`\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-3\",\n          variant: \"secondary\",\n          onClick: () => handleUpdate(listId),\n          children: \" Edit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, list._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this) // <div></div>\n  ;\n}\n\n_s(ListShow, \"8fjXa/Ef6oim5hXa7zSn/4CuS9g=\");\n\n_c = ListShow;\nexport default ListShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListShow\");","map":{"version":3,"sources":["/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListShow.js"],"names":["React","useEffect","useState","axios","styled","Redirect","BrowserRouter","Switch","Route","Link","TodolistPage","Button","ListShow","props","listId","match","params","list","setList","isShown","setIsShown","TaskOverlay","div","TaskBox","fetchList","data","get","console","log","handleDelete","delete","pathname","handleUpdate","author","title","date","tasks","map","task","index","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport TodolistPage from './TodolistPage';\nimport { Button } from 'react-bootstrap';\n\nfunction ListShow(props) {\n    const listId = props.match.params.listId;\n    const [list, setList] = useState();\n    const [isShown, setIsShown] = useState(false);\n\n    const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n\n    const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n    const fetchList = async () => {\n        const { data: list } = await axios.get(`/api/todolist/${listId}`);\n        setList(list);\n        console.log(list);\n    }\n\n    const handleDelete = async (listId) => {\n        await axios.delete(`/api/todolist/${listId}`);\n        <Redirect to={{ pathname: \"/\" }} />\n    }\n\n    const handleUpdate = async (listId) => {\n        await axios.delete(`/api/todolist/${listId}`);\n        <Redirect to={{ pathname: \"/\" }} />\n    }\n\n    useEffect(() => {\n        fetchList();\n        console.log(list);\n    }, [])\n\n    return (\n\n        <div>\n            {\n                list && list.author && list.title && list.date && list.tasks &&\n                <>\n                    <div>\n                        {list.author}'s {list.title}\n                    </div>\n\n                    {list.date}\n                    {list.tasks.map((task, index) =>\n                        <TaskBox key={index} className=\"m-1\">\n                            {/* {isShown && (\n                        <TaskOverlay />\n                    )} */}\n                            {task}\n                        </TaskBox>\n                    )}\n                    <Button className=\"m-3\" variant=\"danger\" onClick={() => handleDelete(listId)}> Delete </ Button>\n                    <Link key={list._id}\n                        to={{\n                            pathname: `/list/${list._id}`\n                        }}\n                    >\n                        <Button className=\"m-3\" variant=\"secondary\" onClick={() => handleUpdate(listId)}> Edit </ Button>\n                    </Link>\n                </>\n            }\n\n        </div >\n\n        // <div></div>\n    )\n}\n\nexport default ListShow;"]},"metadata":{},"sourceType":"module"}