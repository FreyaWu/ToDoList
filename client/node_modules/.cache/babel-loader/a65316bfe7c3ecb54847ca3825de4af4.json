{"ast":null,"code":"var _jsxFileName = \"/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport ListForm from './ListForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCard(list) {\n  _s();\n\n  const [isShown, setIsShown] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n  const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n  const fetchTasks = async () => {\n    const {\n      data: lists\n    } = await axios.get('/api/todolist/');\n    setTasks(lists.tasks);\n  };\n\n  const handleDelete = async listId => {\n    await axios.delete(`/api/todolist/${listId}`);\n    list.updateLists();\n  };\n\n  useEffect(() => {\n    console.log(list); // list.updateLists.fetchTasks();\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-2 align-text-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/list/${list.list._id}`\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [list.list.author, \"'s \", list.list.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [list.list.date, list.list.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskBox, {\n              className: \"m-1\",\n              children: [isShown && /*#__PURE__*/_jsxDEV(TaskOverlay, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), task]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mb-3\",\n            variant: \"danger\",\n            onClick: () => handleDelete(list.list._id),\n            children: \" Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, list.list._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this) // \n  //     {list.list.author}'s {list.list.title} - \n  //     {list.list.tasks.map((task, index) =>\n  //         <TaskBox key={index} className=\"m-1\">\n  //             {isShown && (\n  //                 <TaskOverlay />\n  //             )}\n  //             {task}\n  //         </TaskBox>\n  //     )\n  //     }\n  //     <Button className=\"mb-3\" variant=\"danger\" onClick={() => handleDelete(list.list._id)}> Delete</ Button>\n  // </div>\n  ;\n}\n\n_s(ListCard, \"2vpuiUQyilLrcsGFD/fMM8KBjvQ=\");\n\n_c = ListCard;\nexport default ListCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCard\");","map":{"version":3,"sources":["/Users/wufeiyi/Documents/Programming/Web Develop/Practice/todolist/client/src/ListCard.js"],"names":["React","useEffect","useState","axios","Container","Card","Button","Link","styled","ListForm","ListCard","list","isShown","setIsShown","tasks","setTasks","TaskOverlay","div","TaskBox","fetchTasks","data","lists","get","handleDelete","listId","delete","updateLists","console","log","width","pathname","_id","author","title","date","map","task","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components';\nimport ListForm from './ListForm';\n\nfunction ListCard(list) {\n    const [isShown, setIsShown] = useState(false);\n    const [tasks, setTasks] = useState([]);\n\n    const TaskOverlay = styled.div`\n        background-color: #bbff00;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n    `;\n\n    const TaskBox = styled.div`\n        &:hover ${TaskOverlay} {\n            opacity: 0.9;\n        };\n        cursor: pointer;\n    `;\n\n    const fetchTasks = async () => {\n        const { data: lists } = await axios.get('/api/todolist/');\n        setTasks(lists.tasks);\n    };\n\n    const handleDelete = async (listId) => {\n        await axios.delete(`/api/todolist/${listId}`);\n        list.updateLists();\n    }\n\n    useEffect(() => {\n        console.log(list);\n        // list.updateLists.fetchTasks();\n    }, [list]);\n\n    return (\n        <div className=\"pt-2 align-text-center\">\n            <Card style={{ width: '18rem' }}>\n                <Link\n                    key={list.list._id}\n                    to={{\n                        pathname: `/list/${list.list._id}`\n                    }}\n                >\n                    <Card.Body>\n                        <Card.Title>{list.list.author}'s {list.list.title}</Card.Title>\n                        <Card.Text>\n                            {list.list.date}\n                            {list.list.tasks.map((task, index) =>\n                                <TaskBox key={index} className=\"m-1\">\n                                    {isShown && (\n                                        <TaskOverlay />\n                                    )}\n                                    {task}\n                                </TaskBox>\n                            )}\n                        </Card.Text>\n                        <Button className=\"mb-3\" variant=\"danger\" onClick={() => handleDelete(list.list._id)}> Delete</ Button>\n                    </Card.Body>\n                </Link>\n            </Card>\n        </div>\n\n        // \n        //     {list.list.author}'s {list.list.title} - \n        //     {list.list.tasks.map((task, index) =>\n        //         <TaskBox key={index} className=\"m-1\">\n        //             {isShown && (\n        //                 <TaskOverlay />\n        //             )}\n        //             {task}\n        //         </TaskBox>\n        //     )\n        //     }\n        //     <Button className=\"mb-3\" variant=\"danger\" onClick={() => handleDelete(list.list._id)}> Delete</ Button>\n        // </div>\n\n    )\n}\n\nexport default ListCard;"]},"metadata":{},"sourceType":"module"}